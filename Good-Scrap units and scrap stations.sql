

drop table if exists #POCREATE TABLE #PO(	ID INT IDENTITY	,ProductionOrderID int)INSERT INTO #PO select DISTINCT PO.ID from ffProductionOrder po with(nolock)inner join ffPart p with(nolock) on p.ID = po.PartIDinner join luPartFamily lpf with(nolock) on lpf.ID = p.PartFamilyIDwhere lpf.Name = 'PUC' and po.ActualStartTime >= '2022-01-01 00:00:00.000' and po.ActualFinishTime < '2022-02-01 00:00:00.000'--select * from #POdrop table if exists #unitsselect h.UnitID,h.ProductionOrderID ,max(h.ID) HistoryIDinto #units from ffHistory h with(nolock)where h.ProductionOrderID in (select ProductionOrderID from #PO )GROUP BY h.UnitID,h.ProductionOrderIDDROP TABLE IF EXISTS #history		CREATE TABLE #History(	ID int	,UnitID int	,UnitStateID int	,EmployeeID int	,StationID int	,EnterTime datetime	,ExitTime datetime	,ProductionOrderID int	,PartID int	,LooperCount int	,TaskComplete bit	,Quantity int	,RMAID int 	,PreviousStation varchar(200))DECLARE @start intDECLARE @max intDECLARE @POID intSET @Start = 1SELECT @max = MAX(ID) FROM #POSELECT 'START GETTING #History ' + CONVERT(varchar(30),GETDATE(),121)while @start <= @max begin	----- get po ONE BY ONE	INSERT INTO #History	SELECT 	h.*,		(SELECT TOP 1 Description FROM   (											SELECT TOP 2 H1.ID, H1.UnitStateID, St.Description 											FROM ffHistory H1 with(nolock) 											inner join ffStation st with(nolock)  ON h1.StationID = st.ID											where  H1.UnitID = Ut.UnitID AND H1.ProductionOrderID = ut.ProductionOrderID 											ORDER BY h1.ID DESC											) 		x ORDER BY x.ID ASC ) AS PreviousStation	FROM #units ut	inner join ffHistory H with(nolock) on h.ID = ut.HistoryID 	where ut.ProductionOrderID = (SELECT ProductionOrderID from #po where ID = @start)	--SELECT @Start	SET @start = @start + 1endSELECT 'END GETTING #History ' + CONVERT(varchar(30),GETDATE(),121)DROP TABLE IF EXISTS #Result		CREATE TABLE #Result(	ProductionOrderNumber varchar(200)	,SerialNumber varchar(200)	,Line varchar(600)	,LastStation varchar(600)	,UnitStatus varchar(200)	,LastTransaction datetime	,PreviousStation varchar(200))SELECT 'START NOW GETTING THE DETAIL INFORMATION ' + CONVERT(varchar(30),GETDATE(),121)SET @Start = 1while @start <= @max begin	INSERT INTO #Result	SELECT	po.ProductionOrderNumber,	S.Value AS SerialNumber	,L1.Description AS Line	,st.Description AS Station	,us.Description UnitStatus	,H.ExitTime LastTransaction	,h.PreviousStation	FROM #History H 	INNER JOIN ffStation st1  with(nolock) ON ST1.ID = H.StationID	INNER JOIN ffProductionOrder PO with(nolock)  ON PO.ID = H.ProductionOrderID	INNER JOIN ffStationType STT with(nolock)  ON STT.ID = ST1.StationTypeID	INNER JOIN ffUnit U with(nolock)  ON H.UnitID = U.ID 	INNER JOIN ffUnitDetail UD with(nolock)  ON UD.UnitID = U.Id	INNER JOIN ffUnitState U1 with(nolock)  ON U1.ID = U.UnitStateID 	INNER JOIN ffSerialNumber S with(nolock)  ON S.UnitID = U.ID AND S.SerialNumberTypeID = 0	INNER JOIN luUnitStatus Us with(nolock)  ON Us.ID = U.StatusID	INNER JOIN ffUnitState St with(nolock)  ON H.UnitStateID = St.ID	Inner JOIN ffLineOrder L with(nolock)  ON L.ProductionOrderID = PO.ID	INNER JOIN ffLine L1 with(nolock) ON   L1.ID = st1.LineID	WHERE H.ProductionOrderID = (SELECT ProductionOrderID from #po where ID = @start)	set @start = @start + 1ENDSELECT 'END NOW GETTING THE DETAIL INFORMATION ' + CONVERT(varchar(30),GETDATE(),121)SELECT *FROM #ResultSelect Top 10000 * from luPartFamily